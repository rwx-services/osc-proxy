name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.

jobs:
  build-macos:
    name: Build macOS Release
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: electron-app/package-lock.json

      - name: Install dependencies
        run: |
          cd electron-app
          npm ci

      - name: Build CSS
        run: |
          cd electron-app
          npm run build:css

      - name: Build Electron app
        run: |
          cd electron-app
          npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: |
            electron-app/dist-build/*.dmg
            electron-app/dist-build/*.zip
            electron-app/dist-build/*.blockmap
          retention-days: 5

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            electron-app/dist-build/*.dmg
            electron-app/dist-build/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos-arm64:
    name: Build macOS ARM64 Release
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: electron-app/package-lock.json

      - name: Install dependencies
        run: |
          cd electron-app
          npm ci

      - name: Build CSS
        run: |
          cd electron-app
          npm run build:css

      - name: Build Electron app for ARM64
        run: |
          cd electron-app
          npx electron-builder --mac --arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename ARM64 builds
        run: |
          cd electron-app/dist-build
          # Rename files to include arm64 suffix
          for file in *.dmg; do
            [ -f "$file" ] && mv "$file" "${file%.dmg}-arm64.dmg"
          done
          for file in *.zip; do
            [ -f "$file" ] && mv "$file" "${file%.zip}-arm64.zip"
          done

      - name: Upload ARM64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-builds
          path: |
            electron-app/dist-build/*-arm64.dmg
            electron-app/dist-build/*-arm64.zip
          retention-days: 5

      - name: Add ARM64 builds to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            electron-app/dist-build/*-arm64.dmg
            electron-app/dist-build/*-arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
